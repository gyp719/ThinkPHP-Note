basename — 返回路径中的文件名部分
    举例:
    $path = 'D:\phpStudy\WWW\Ycku\PhpBased\basic6\demo01.php';
        echo basename($path); // demo01.php

dirname — 返回路径中的目录部分
    举例：
     $path = 'D:\phpStudy\WWW\Ycku\PhpBased\basic6\demo01.php';
            echo basename($path); // D:\phpStudy\WWW\Ycku\PhpBased\basic6

pathinfo — 返回文件路径的信息,其中包括：目录名、基本名和扩展名。
    举例：
    $path = 'D:\phpStudy\WWW\Ycku\PhpBased\basic6\demo01.php';
     print_r(pathinfo($path));

返回值：
    Array
    (
        [dirname] => D:\phpStudy\WWW\Ycku\PhpBased\basic6
        [basename] => demo01.php
        [extension] => php
        [filename] => demo01
    )

realpath — 返回规范化的绝对路径名
 举例：
  $path = 'demo02.php';
     echo realpath($path); // D:\phpStudy\WWW\Ycku\PhpBased\basic6\demo02.php

filesize — 取得文件大小
    举例：
    $path = 'D:\phpStudy\WWW\Ycku\PhpBased\basic6\demo03.php';
        echo round(filesize($path)/1024,2).'KB'; // 0.12KB

disk_free_space — 返回目录中的可用空间
    echo round(disk_free_space('C:')/1024/1024/1024,2).'GB'; //25.71GB

disk_total_space — 返回一个目录的磁盘总大小
    echo round(disk_total_space("C:")/1024/1024/1024,2).'GB'; // 50GB

fileatime — 取得文件的最后访问时间
    $path = 'D:\phpStudy\WWW\Ycku\PhpBased\basic3\demo01.php';
    echo date('Y-m-d H:i:s',fileatime($path)); // 2017-12-21 22:45:56

filectime — 取得文件的改变时间，所有者，权限

filemtime — 取得文件最后的修改时间，文件里面的内容修改后的时间

date_default_timezone_set — 设定用于一个脚本中所有日期时间函数的默认时区

----文件的处理

fopen() 打开文件    第一个参数表明哪个文件，第二个参数表明模式

1.如果文件已经存在，并且已有数据，那么删除这个文件，重新创建
2.如果没有这个文件，那么自动创建。
返回值：资源句柄

fwrite() 写入文件   第一个参数是资源，第二个参数是写入的内容，第三个参数是写入的长度

 举例：
    $fp = fopen('file.txt','w');

        $outString = 'this is PHP show';

        fwrite($fp,$outString,strlen($outString)); //strlen 获取字符串的长度

        fclose($fp);


file_put_contents — 将一个字符串写入文件
    file_put_contents('file.txt2','学习PHP');


--读出文件
fgetc()     读出一个字符，并将指针移到下一个字符
fgets()     读出一行字符，可以指定一行显示的长度  返回长度最多为 length - 1 字节的字符串
fgetss()    从文件指针中读取一行并过滤掉HTML标签
fread()     读取定量的字符
fpassthru   输出文件指针处的所有剩余数据  echo输出 返回的是剩余的总长度

file()      将整个文件读入数组中，以行来分组
readfile()  读入一个文件并写入到输出缓冲     返回值是文件字节的总长度
file_get_contents   将整个文件读入一个字符串，用echo 输出

feof — 测试文件指针是否到了文件结束的位置

        $fp = fopen('file.txt','r');
        while(!feof($fp)) {
            echo fgetc($fp);
        }
        fclose($fp);

file_exists — 检查文件或目录是否存在
filesize — 取得文件大小
unlink — 删除文件
rewind — 倒回文件指针的位置
ftell — 返回文件指针读/写的位置
fseek — 在文件指针中定位

opendir — 打开目录句柄
readdir — 从目录句柄中读取条目
closedir — 关闭目录句柄
举例：
     $dir = opendir('D:\phpStudy\WWW\Ycku\PhpBased\basic6');

        while($file = readdir($dir)){
           if($file!='.' && $file!= '..'){
               echo $file.'<br/>';
           }
        }
        closedir($dir);

scandir — 将目录读入数组
举例：
    print_r(scandir('D:\phpStudy\WWW\Ycku\PhpBased\basic6'));

返回值：

Array
(
    [0] => .
    [1] => ..
    [2] => demo01.php
    [3] => demo02.php
    [4] => demo03.php
    [5] => demo04.php
    [6] => demo05.php
    [7] => demo06.php
    [8] => demo07.php
    [9] => demo08.php
    [10] => demo09.php
    [11] => demo10.php
    [12] => demo11.php
    [13] => demo12.php
    [14] => demo13.php
    [15] => file.txt
    [16] => file2.txt
)

rmdir — 删除空目录  相对路径和绝对路径都可以操作的
rename — 重命名一个文件或目录

 dirname(__FILE__); //获取当前文件的 目录 路径
is_dir — 判断给定文件名是否是一个目录



文件上传

$_FILES 超级全局变量,他存储各种与上传有关的信息

is_uploaded_file — 判断文件是否是通过 HTTP POST 上传的

move_uploaded_file — 将上传的文件移动到新位置


